import Head from 'next/head'
import { Container, Snackbar, Alert, Typography, Box, Button, Avatar} from '@mui/material'
import TodoList from '@/components/TodoList'
import TodoForm from '@/components/TodoForm'
import { TodoContext } from '@/contexts/TodoContext'
import { useState, useContext } from 'react'
import  { AuthContext } from '../contexts/AuthContext'
import { auth } from '../firebase'

export default function Home() {

  const {currentUser}= useContext(AuthContext)

  const [open, setOpen] = useState(false);
  const [alertType, setAlertType] = useState("success");
  const [alertMessage, setAlertMessage] = useState("");

  const showAlert = (type, msg) => {
    setAlertMessage(msg);
    setAlertType(type);
    setOpen(true);
  }

  const [todo, setTodo] = useState({
    baslik: '',
    aciklama: ''
  })

  const handleClose = (even, reason) => {
    if (reason === 'clickway') {
      return;
    }

    setOpen(false);
  };

  // return <Login/>

  // return <Loading type="spinningBubbles" color="gray"/>

  return (
    
    <TodoContext.Provider value={{ showAlert, todo, setTodo }}>
      <Container maxWidth="md">
        <Head>
          <title>TO DO APP</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <Box sx={{display:'flwx', justifyContent:'space-between', mt:3}}>
          
          <Avatar  />

          <Typography variant='h5'>
            
          </Typography>
          <Button variant='contained' color='primary' onClick={()=> auth.signOut()}>
            Çıkış
          </Button>
        </Box>

        <TodoForm />
        <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }} open={open} autoHideDuration={4000} onClose={handleClose}>
          <Alert onClose={handleClose} severity={alertType} sx={{ width: '100%' }}>
            {alertMessage}
          </Alert>
        </Snackbar>
        <TodoList />

      </Container>
    </TodoContext.Provider>
  )
}
